<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yao hsiao</title>
    <link>https://yaohsiaopid.github.io/</link>
    <description>Recent content on yao hsiao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Dec 2019 22:34:55 +0800</lastBuildDate>
    
	<atom:link href="https://yaohsiaopid.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Learning Note on GPU</title>
      <link>https://yaohsiaopid.github.io/posts/gpu_notes/</link>
      <pubDate>Sun, 01 Dec 2019 22:34:55 +0800</pubDate>
      
      <guid>https://yaohsiaopid.github.io/posts/gpu_notes/</guid>
      <description>GPU Cuda intro GPU introduction  memory: global &amp;ndash;&amp;gt; PBSM (per block shared memory) &amp;ndash;&amp;gt; local register multiple stream multi-processors (SM):
 vector machine, share register file, programmable cache    Cuda  Kernel = Many Concurrent Threads  kernel = grid of thread blocks Each thread executes the same code but on the different data based on its threadID threads are grouped into thread blocks  blocks are independent to each other   Thread Level Scheduling - Warp</description>
    </item>
    
    <item>
      <title>verilog manuals excerpts</title>
      <link>https://yaohsiaopid.github.io/posts/verilog_excerpts/</link>
      <pubDate>Thu, 17 Oct 2019 14:33:16 +0800</pubDate>
      
      <guid>https://yaohsiaopid.github.io/posts/verilog_excerpts/</guid>
      <description>module 3 intro  HSL supports multiple level of abstraction  behavior: algorithm RTL: nets and registers gate: built-in and user-define primitives switch  Abstraction example &amp;ndash; divided by 2
 behavioral:   always @(din) // block executed on every change in `din`  dout = din/2;   RTL:  always @(posedge clk) dout &amp;lt;= din &amp;gt;&amp;gt; 1; //speicial &amp;#34;nonblocking&amp;#34; assignment   Structural  FD1 op[3:0] ( .</description>
    </item>
    
    <item>
      <title>2019趨勢實習</title>
      <link>https://yaohsiaopid.github.io/posts/2019%E8%B6%A8%E5%8B%A2%E5%AF%A6%E7%BF%92%E5%BF%83%E5%BE%97/</link>
      <pubDate>Sat, 31 Aug 2019 13:39:27 +0800</pubDate>
      
      <guid>https://yaohsiaopid.github.io/posts/2019%E8%B6%A8%E5%8B%A2%E5%AF%A6%E7%BF%92%E5%BF%83%E5%BE%97/</guid>
      <description>總結 今年有幸到趨勢實習，這邊記錄一下面試、工作內容、環境、以及心得。
要用一句話總結的話，one of the best out there.
從他們對實習生的重視，看得出這間公司對人才是相當認真在經營的，當然並不意外地好公司經典特質都有：重視人才、尊重每個人想法、並且有很讚同事的地方；最喜歡的點是溝通交流，因為重視每個人的職業生涯發展，所以你喜歡或不喜歡做什麼，都可以講，也可以做選擇的，不是老闆分配你什麼就得做什麼(據我理解，正職也是一樣的)。同樣地，不管什麼專業的，從底層到雲端等的各式技術，都有部門在使用，所以不是只限於“資安”這塊領域，可以學到的也不是只有軟體開發等的技巧，soft skill也是公司很重視的一塊領域。
真心的推薦這家公司的實習計畫，一間公司走進去的氣氛你就知道你會不會喜歡，所以直接申請，跟公司的人聊聊最快了！
申請 流程大概是：投履歷、線上coding interview、實體面試。
實體面試的話不是白板題，大部分就是聊聊你這個人的經驗、目標、部門在做什麼、可能會有什麼樣的專案，就是很好玩，跟你聊的就是未來的主管，我遇到的都很nice，透過半小時到一個小時的時間很快就可以知道一個部門大概在做什麼，你可以學到什麼；就算不滿意，認識一下裡面的主管、看看他們在一個產業的approach也是很有益處的。
coding interview 題目有興趣再email我。
整體經驗 首先是技術面：
我待的部門是Core Tech底下的一個team，主要負責系統設計與開發，簡單來說其負責的模組是在底層監控客戶電腦，以保全業來做比喻，就是監視器的角色吧，而在它上層的模組就是根據監視器的影像做辨識以及保護措施，是不是email spam、有問題的網站、或在做奇怪行為的一個病毒之類的。
技術上來講，可以學到system相關的知識，主要是window kernel knowledge, malware behavior analysis, testing, design pattern 等等。除此之外，我的project是跟data相關的，所以也接觸到大量的data science, machine learning, distributed computing framework 等等的(學校學的真是太理想了、在真實世界的task一如既往的超級有挑戰&amp;hellip;.)。
當然其他很多技術例如CI/CD、DevOps、Threat hunting等的也是可以接觸到，主要看你是在哪個部門。
workshop、讀書會也是很多的，我待的是ML study group，真的是跟學校實驗室不一樣，討論每次都很踴躍(激烈XD)，但完全跟在學校看paper的角度很不一樣，因為是要應用在真是情況想，所以討論的層面都是很接近真實會遇到的。
至於你想學什麼技術、做什麼project，完全取決於你，自由度很高；一旦決定，部門內總是有取之不盡的資源(神人同事!!）可以讓你deep dive。
簡而言是神人很多、技術也是很新的，技術這一點，無庸置疑。
再者，就是人：
我認為實習除了技術的精進外，最重要的是soft skill還有與人互動的體驗。
趨勢官方的安排讓我們有很多機會可以發言、上台present、發表你的想法，這是一點，其中一個不錯的活動(幫HR一下)是6 min pitch，for 全部實習生，為的是讓不同部門的實習生介紹自己所在部門，認識一下其他部門在做什麼之外，很好的是讓自己更融入所屬部門，更理解所屬部門的角色；也有交到好朋友的機會。(雖然到後面有點冗長，不過整體的活動很不錯)
至於部門內的話，是同事們也總是很nice，願意讓你一天到晚敲他們問技術外，也很樂於分享他們的職涯；部門氣氛也很好，常常聽到哄堂大笑，有很多活動像是桌遊party、下午茶、社團活動(同事禮拜一三6點一到就嚷嚷著「跑步了」超健康、或揪團中午去打羽球或打電動(!))；像我的主管跟部門大主管撥空跟我聊聊生涯規劃等，從這些有著十幾年的職涯經驗的人身上真的學到很多，或是身為data scientiset 的 mentor對於業界data practice的看法也讓我有不同的視野。
當然也是會聽到組織內的一些conflict(並不意外)，最重要的是在周圍的人是很有想法、有趣的一群，做的事也是很有挑戰的，所以簡而言之，會讓人每天期待來公司的。
最後，薪水的話，不怎麼高，眾所皆知；但我覺得不行跟美國比，跟竹科比，已經好很多了，再怎麼比，這句話比較有意義：不要在意第一份工作的薪水，要在意經驗的積累。在趨勢，只要主動，都是可以成長的，只看自己怎麼規劃。
後記 不知不覺寫了很多；總結一下，很棒的一個實習，由衷感謝部門的照顧~</description>
    </item>
    
    <item>
      <title>自修GRE 一戰334 AW 4.0</title>
      <link>https://yaohsiaopid.github.io/posts/gre-prep/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0800</pubDate>
      
      <guid>https://yaohsiaopid.github.io/posts/gre-prep/</guid>
      <description>結果 考試日期及地點：一戰2019.06.14 (台大語言中心)
考試成績：一戰334 (V: 164/ Q: 170) (QVQVQ), AW4.0
英文能力：
- 學測英文: 15級
- TOEFL: 109(L29, R30, W26, S24; 2015.11.21)
- SAT(pre2016): 2120, essay 7 of 12
沒事為啥不補習： 純粹想練習英文，曾體驗到英文有一定程度給自己踏入另一個領域的機會；覺得補習麻煩XD
TL;DR  資料：這裡 背單字：紅寶書亂序版、要你命三千單; 工具:excel 閱讀：速度、Manhattan LSAT PEAR閱讀法，抓重點做到了，大概就330以上了，考試技巧其次 作文：寫呀!?! full-time的自修可以三個月，但part-time、學期中的話四個月  計畫與資料 所有計畫、資源是從這位神人的文章參考的http://bbs.gter.net/thread-1510435-1-1.html，不過是於2013年寫的，所以資源在時間上可能就沒那麼適用(有些是老GRE)，但他的方法、計畫、整理還是很有用。
至於資料都放在這裡，以下括號的路徑都是以此資料夾為根目錄。 以下計畫的說明只有大概，detail請參考神人robin.
Phase 1 紅寶書亂序+3000+長難句+The Economist+Aldaily  day 1 - 14: 紅寶書亂序紙本
嚴格遵循杨鹏14天原则(/voc/17天搞定GRE單詞.doc)，一天花6-8小時背，個人是把書切成四分、帶著走方便.
   单词打通后你会发现世界很美好。The Economist可以看懂了，文学作品没有单词障碍了 – crazyrobin
  day 15 - 24: 複習紅寶書 + 長難句(每天10句, /reading/楊鵬GRE&amp;amp;GMAT閱讀難句教程.</description>
    </item>
    
    <item>
      <title>zybo linux</title>
      <link>https://yaohsiaopid.github.io/posts/zybo_linux_prebuilt/</link>
      <pubDate>Sat, 23 Feb 2019 22:34:55 +0800</pubDate>
      
      <guid>https://yaohsiaopid.github.io/posts/zybo_linux_prebuilt/</guid>
      <description>Achievement booting Digilent zybo-70-20 with prebuilt image
Steps Required tools  prepare env
sudo apt-get update sudo apt-get install tofrodos gawk xvfb git libncurses5-dev tftpd zlib1g-dev zlib1g-dev:i386 \ libssl-dev flex bison chrpath socat autoconf libtool texinfo gcc-multilib \ libsdl1.2-dev libglib2.0-dev screen pax sudo -s apt-get install tftpd-hpa chmod a+w /var/lib/tftpboot/ reboot  PetaLinux SDK
 go https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/embedded-design-tools.html, slide down to download PetaLinux 20xx.x Installer    go to the downloaded directory then .</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://yaohsiaopid.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yaohsiaopid.github.io/about/</guid>
      <description>I am Yao Hsiao, a senior majoring in EE at National Tsing Hua University. I have a strong background in engineering, and am particularly interested in computer architecture.
 Skills  Software: C/C++, Python, SystemVerilog, Matlab, RISC-V assembly, Swift Tools &amp;amp; Library: PySpark, MPI, CUDA, Pytorch, Intel Intrinsics, Xilinx HLx, OpenCV, ARM mbed OS, embedded Linux  Experience  TA for computer architecture, NTHU, Jul. 2019 - Present System Development Intern, Trend Micro Inc, Jul.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://yaohsiaopid.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yaohsiaopid.github.io/contact/</guid>
      <description>Follow me, @johndoe.</description>
    </item>
    
    <item>
      <title>Kontakt</title>
      <link>https://yaohsiaopid.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yaohsiaopid.github.io/contact/</guid>
      <description>Chodź za mną, @johndoe.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://yaohsiaopid.github.io/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yaohsiaopid.github.io/projects/</guid>
      <description>Nothing to see here&amp;hellip; Move along!</description>
    </item>
    
    <item>
      <title>Projektowanie</title>
      <link>https://yaohsiaopid.github.io/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yaohsiaopid.github.io/projects/</guid>
      <description>w budowie&amp;hellip;</description>
    </item>
    
  </channel>
</rss>